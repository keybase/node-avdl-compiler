// Generated by IcedCoffeeScript 108.0.11
(function() {
  var BaseEmitter, PythonEmitter, path_lib, pkg,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  path_lib = require('path');

  BaseEmitter = require('./base_emitter').BaseEmitter;

  pkg = require('../package.json');

  exports.PythonEmitter = PythonEmitter = (function(_super) {
    __extends(PythonEmitter, _super);

    function PythonEmitter() {
      PythonEmitter.__super__.constructor.apply(this, arguments);
      this._tab_char = " ".repeat(4);
    }

    PythonEmitter.prototype.emit_preface = function(infiles, _arg) {
      var infile, namespace, _i, _len;
      namespace = _arg.namespace;
      this.output('"""' + namespace);
      this.output("");
      this.output("Auto-generated to Python types by " + pkg.name + " v" + pkg.version + " (" + pkg.homepage + ")");
      this.output("Input files:");
      for (_i = 0, _len = infiles.length; _i < _len; _i++) {
        infile = infiles[_i];
        this.output(" - " + (path_lib.relative(process.cwd(), infile)));
      }
      this.output('"""');
      return this.output("");
    };

    PythonEmitter.prototype.run = function(_arg) {
      var infiles, json, options, outfile;
      infiles = _arg.infiles, outfile = _arg.outfile, json = _arg.json, options = _arg.options;
      this.emit_preface(infiles, json, options);
      return this._code;
    };

    return PythonEmitter;

  })(BaseEmitter);

}).call(this);
